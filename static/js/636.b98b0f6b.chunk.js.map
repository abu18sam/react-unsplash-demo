{"version":3,"file":"static/js/636.b98b0f6b.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","components/imagesContainer/imageCard/ImageCard.jsx","components/imagesContainer/imageGrid/ImageGrid/ImageGrid.jsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import PropTypes from 'prop-types';\nimport { memo } from 'react';\nimport Card from 'react-bootstrap/Card';\n\nconst ImageCard = props => {\n    const { imageUrl, photoBy, alt_description } = props;\n\n    return (\n        <>\n            <Card className='image-card'>\n                <Card.Img  src={imageUrl} title={`Photo by: ${photoBy}`} alt={alt_description? alt_description : ''} />\n                {/* <Card.Body>\n                    <Card.Title>Photo by: <i>{photoBy}</i></Card.Title>\n                    <Card.Text>\n                        {imageDescription}\n                    </Card.Text>\n                </Card.Body> */}\n            </Card>\n        </>\n    )\n}\n\nImageCard.propTypes = {\n    imageUrl: PropTypes.string.isRequired,\n    photoBy: PropTypes.string,\n    imageDescription: PropTypes.string,\n    alt_description: PropTypes.string\n}\n\nexport default memo(ImageCard);","import PropTypes from 'prop-types';\nimport { memo } from 'react';\nimport { Row } from 'react-bootstrap';\nimport ImageCard from '../../imageCard/ImageCard';\n\nconst ImageGrid = (props) => {\n    const { imagesList } = props;\n    return (\n        <>\n            <Row className=\"images-grid\">\n                {imagesList?.map((imageData) => {\n                    return (\n                        <ImageCard\n                            imageUrl={imageData.urls.small}\n                            photoBy={imageData.user.name}\n                            imageDescription={imageData.description}\n                            alt_description={imageData.alt_description}\n                            key={imageData.id}\n                        />\n                    )\n                })}\n            </Row>\n        </>\n    )\n}\n\nImageGrid.propTypes = {\n    imagesList: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        description: PropTypes.string,\n        alt_description: PropTypes.string,\n        urls: PropTypes.shape({ full: PropTypes.string, thumb: PropTypes.string, small: PropTypes.string, regular: PropTypes.string }),\n        user: PropTypes.shape({ first_name: PropTypes.string, name: PropTypes.string, last_name: PropTypes.string })\n    }))\n}\n\nexport default memo(ImageGrid);"],"names":["className","React","p","ref","_jsx","classNames","CardImg","bsPrefix","variant","as","Component","props","prefix","useBootstrapPrefix","displayName","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","ImageCard","imageUrl","photoBy","alt_description","src","title","alt","memo","ImageGrid","imagesList","Row","map","imageData","urls","small","user","name","imageDescription","description","id"],"sourceRoot":""}